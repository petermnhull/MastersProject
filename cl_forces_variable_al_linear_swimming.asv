function [FX, FY] = cl_forces_variable_al_linear_swimming(FX_IN, FY_IN, X_IN, Y_IN, N_w, cl_el, nt, TOTAL_STEPS)

% This function returns a complete asymmetric crosslinked set of forces

FX = FX_IN;
FY = FY_IN;

% Constants for cross links (linear and trig)
k_a = 1;
k_b = 1;
lambda = 5;

% Initialise
t = nt;

% Divisions of filament
div = 2;

% Segments per division
spdiv = floor(N_w / div);

for j=1:div
    seg_start = 1 + (spdiv * (j - 1));
    seg_end = seg_start + spdiv - 1;
    
    if seg_end == N_w
        seg_end = seg_end - 1;
    end
    
    for i=seg_start:seg_end

            % Parameters for time component
            omega = 2 * pi / TOTAL_STEPS        % undulation freq
            k = w                               % wave number
            time_component = sin(k*s - omega*t + phi);
            
            % Equilibrium lengths
            el_a = cl_el + lambda * ((i - 1) / (div * N_w));
            el_b = cl_el + lambda * (1 - ((i - 1) / (div * N_w)));
            
            if j == 1
                scale = 2 * (1 - ((i - 1) / N_w));
            else
                scale = 1;
            end
            
            el_a = cl_el + lambda * time_component * scale;

            % Add forces
            [FX, FY] = add_spring_force_between_segments(FX, FY, X_IN, Y_IN, i, N_w + i + 1, k_a, el_a);    
            [FX, FY] = add_spring_force_between_segments(FX, FY, X_IN, Y_IN, i + 1, N_w + i, k_b, el_b);    
    end
end